version: 2

executors:

  small_cpu39:
    docker:
      - image: cimg/python:3.9.16
    environment:
      PYTHONUNBUFFERED: 1
    resource_class: medium
 

jobs:
  plan-apply:
    working_directory: /tmp/parlai
    docker:
      - image: docker.mirror.hashicorp.services/hashicorp/terraform:light
    steps:
      - checkout
      # Create .aws directory
      - run:
          name: Create .aws directory
          command: mkdir -p ~/.aws


   # Authenticate with AWS

      - run:
          name: Configure AWS credentials
          command: |
            echo -e "[default]\naws_access_key_id=$AWS_ACCESS_KEY_ID\naws_secret_access_key=$AWS_SECRET_ACCESS_KEY" > ~/.aws/credentials
            echo -e "[default]\nregion=$AWS_DEFAULT_REGION" > ~/.aws/config
       
      - run:
          name: terraform init & plan
          command: |
            cd terraform
            terraform init -input=false
            terraform plan -out tfapply 
      - persist_to_workspace:
          root: .
          paths:
            - .

  apply:
    docker:
      - image: docker.mirror.hashicorp.services/hashicorp/terraform:light
    steps:
      - attach_workspace:
          at: .
      - run:
          name: terraform
          command: |
            cd terraform
            terraform apply -auto-approve tfapply
      - persist_to_workspace:
          root: .
          paths:
            - .

  plan-destroy:
    docker:
      - image: docker.mirror.hashicorp.services/hashicorp/terraform:light
    steps:
      - attach_workspace:
          at: .
      - run:
          name: terraform create destroy plan
          command: |
            cd terraform
            terraform plan -destroy -out tfdestroy 
      - persist_to_workspace:
          root: .
          paths:
            - .

  destroy:
    docker:
      - image: docker.mirror.hashicorp.services/hashicorp/terraform:light
    steps:
      - attach_workspace:
          at: .
      - run:
          name: terraform destroy
          command: |
            cd terraform
            terraform apply -auto-approve tfdestroy
workflows:
  version: 2
  plan_approve_apply:
    jobs:
      - plan-apply
      - apply:
          requires:
            - plan-apply
     # - plan-destroy:
     #     requires:
     #       - apply
     # - destroy:
     #    requires:
     #     - plan-destroy     